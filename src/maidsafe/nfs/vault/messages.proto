/*  Copyright 2012 MaidSafe.net limited

    This MaidSafe Software is licensed to you under (1) the MaidSafe.net Commercial License,
    version 1.0 or later, or (2) The General Public License (GPL), version 3, depending on which
    licence you accepted on initial access to the Software (the "Licences").

    By contributing code to the MaidSafe Software, or to this project generally, you agree to be
    bound by the terms of the MaidSafe Contributor Agreement, version 1.0, found in the root
    directory of this project at LICENSE, COPYING and CONTRIBUTOR respectively and also
    available at: http://www.maidsafe.net/licenses

    Unless required by applicable law or agreed to in writing, the MaidSafe Software distributed
    under the GPL Licence is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied.

    See the Licences for the specific language governing permissions and limitations relating to
    use of the MaidSafe Software.                                                                 */

option optimize_for = LITE_RUNTIME;

package maidsafe.nfs_vault.protobuf;

message AvailableSize {
  required uint64 size = 1;
}

message DiffSize {
  required int64 size = 1;
}

message DataName {
  required uint32 type = 1;
  required bytes raw_name = 2;
}

message DataNames {
  repeated DataName data_names = 1;
}

message DataNameAndVersion {
  required bytes serialised_data_name = 1;
  required bytes serialised_version_name = 2;
}

message DataNameOldNewVersion {
  required bytes serialised_data_name = 1;
  optional bytes serialised_old_version_name = 2;
  required bytes serialised_new_version_name = 3;
}

message VersionTreeCreation {
  required bytes serialised_data_name = 1;
  required bytes serialised_version_name = 2;
  required int32 max_versions = 3;
  required int32 max_branches = 4;
}

message DataNameAndContent {
  required bytes serialised_name = 1;
  required bytes content = 2;
}

message DataNameAndRandomString {
  required bytes serialised_name = 1;
  required bytes random_string = 2;
}

message DataNameAndCost {
  required bytes serialised_name = 1;
  required int32 cost = 2;
}

message DataNameAndSize {
  required bytes serialised_name = 1;
  required int32 size = 2;
}

message DataNameAndContentOrCheckResult {
  required bytes serialised_name = 1;
  optional bytes content = 2;
  optional bytes check_result = 3;
}

message PmidHealth {
  required bytes serialised_pmid_health = 1;
}

message MpidMessageBase {
  required bytes sender = 1;
  required bytes receiver = 2;
  required int32 id = 3;
  required int32 parent_id = 4;
  required bytes signed_header = 5;
}

message MpidMessageAlert {
  required bytes serialised_base = 1;
  required bytes message_id = 2;
}

message MpidMessage {
  required bytes serialised_base = 1;
  required bytes signed_body = 2;
}


